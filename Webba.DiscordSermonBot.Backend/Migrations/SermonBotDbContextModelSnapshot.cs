// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webba.DiscordSermonBot.Lib.Data;

#nullable disable

namespace Webba.DiscordSermonBot.Backend.Migrations
{
    [DbContext(typeof(SermonBotDbContext))]
    partial class SermonBotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Webba.DiscordSermonBot.Lib.Models.SermonMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastFatihTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NextSermonTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RotationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SermonRotationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("RotationId");

                    b.HasIndex("SermonRotationId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Webba.DiscordSermonBot.Lib.Models.SermonRotation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset?>("LastSermonTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ScheduledMessageCharacter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ScheduledMessageId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ScheduledMessageTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Rotations");
                });

            modelBuilder.Entity("Webba.DiscordSermonBot.Lib.Models.SermonMember", b =>
                {
                    b.HasOne("Webba.DiscordSermonBot.Lib.Models.SermonRotation", null)
                        .WithMany()
                        .HasForeignKey("RotationId");

                    b.HasOne("Webba.DiscordSermonBot.Lib.Models.SermonRotation", null)
                        .WithMany("Members")
                        .HasForeignKey("SermonRotationId");
                });

            modelBuilder.Entity("Webba.DiscordSermonBot.Lib.Models.SermonRotation", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
